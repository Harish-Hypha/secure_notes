name: DevSecOps CD
env:
  TF_VAR_ec2_public_key: ${{ secrets.EC2_PUBLIC_KEY }}


on:
  workflow_dispatch:

jobs:
  deploy-and-dast:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout repo
      uses: actions/checkout@v3

    - name: 🌐 Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.7

    - name: 🔐 Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: ap-south-1

    - name: 🏗️ Terraform Init
      working-directory: terraform/
      run: terraform init

    - name: 🧱 Terraform Apply
      working-directory: terraform/
      run: terraform apply -auto-approve

    - name: 🚀 Deploy App to EC2 (via SSH)
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
        chmod 600 key.pem
        scp -i key.pem -o StrictHostKeyChecking=no -r app/ ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/secure-notes-app/
        ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} "
          cd secure-notes-app && 
          pip3 install -r requirements.txt &&
          nohup python3 app/main.py > app.log 2>&1 &
        "

    - name: 🕷️ OWASP ZAP - DAST Scan
      run: |
        docker run -v $(pwd):/zap/reports -t owasp/zap2docker-stable zap-baseline.py \
          -t http://${{ secrets.EC2_PUBLIC_IP }}:6000/health \
          -r zap-report.html || true

    - name: 📝 Upload ZAP Report
      uses: actions/upload-artifact@v3
      with:
        name: zap-report
        path: zap-report.html
